# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-24 22:42+0300\n"
"PO-Revision-Date: 2018-08-27 15:48+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: tr_TR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.7.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: library/array.rst:2
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ":mod:`array` --- Verimli sayısal diziler"

#: library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""
"Bu modül özlü bir biçimde bir dizinin temel değerleri olan karakterleri, tam "
"sayıları ve gerçek sayıları temsil eden bir nesne tipi tanımlıyor.\n"
"Arraylar dizge tipindedirler ve daha çok liste gibi davranırlar"

#: library/array.rst:19
msgid "Type code"
msgstr "*Type code*"

#: library/array.rst:19
msgid "C Type"
msgstr "C Tipi"

#: library/array.rst:19
msgid "Python Type"
msgstr "Python Tipi"

#: library/array.rst:19
msgid "Minimum size in bytes"
msgstr "byte'larda minimum boyut"

#: library/array.rst:19
msgid "Notes"
msgstr "Not"

#: library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: library/array.rst:23 library/array.rst:29 library/array.rst:33
#: library/array.rst:37 library/array.rst:41
msgid "int"
msgstr "int"

#: library/array.rst:23
msgid "1"
msgstr "1"

#: library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: library/array.rst:25
msgid "wchar_t"
msgstr ""

#: library/array.rst:25
msgid "Unicode character"
msgstr "Unicode karakter"

#: library/array.rst:27 library/array.rst:31 library/array.rst:33
msgid "2"
msgstr "2"

#: library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: library/array.rst:27
msgid "``'h'``"
msgstr "``'h'``"

#: library/array.rst:27
msgid "signed short"
msgstr "signed short"

#: library/array.rst:29
msgid "``'H'``"
msgstr "``'H'``"

#: library/array.rst:29
msgid "unsigned short"
msgstr "unsigned short"

#: library/array.rst:31
msgid "``'i'``"
msgstr "``'i'``"

#: library/array.rst:31
msgid "signed int"
msgstr "signed int"

#: library/array.rst:33
msgid "``'I'``"
msgstr "``'I'``"

#: library/array.rst:33
msgid "unsigned int"
msgstr "unsigned int"

#: library/array.rst:35
msgid "``'l'``"
msgstr "``'l'``"

#: library/array.rst:35
msgid "signed long"
msgstr "signed long"

#: library/array.rst:37 library/array.rst:43
msgid "4"
msgstr "4"

#: library/array.rst:37
msgid "``'L'``"
msgstr "``'L'``"

#: library/array.rst:37
msgid "unsigned long"
msgstr "unsigned long"

#: library/array.rst:39
msgid "``'q'``"
msgstr "``'q'``"

#: library/array.rst:39
msgid "signed long long"
msgstr "signed long long"

#: library/array.rst:41 library/array.rst:45
msgid "8"
msgstr "8"

#: library/array.rst:41
msgid "``'Q'``"
msgstr "``'Q'``"

#: library/array.rst:41
msgid "unsigned long long"
msgstr "unsigned long long"

#: library/array.rst:43
msgid "``'f'``"
msgstr "``'f'``"

#: library/array.rst:45
msgid "float"
msgstr "float"

#: library/array.rst:45
msgid "``'d'``"
msgstr "``'d'``"

#: library/array.rst:45
msgid "double"
msgstr "double"

#: library/array.rst:48
msgid "Notes:"
msgstr "Notlar:"

#: library/array.rst:51
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr ""

#: library/array.rst:53
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect to its behavior because "
"``Py_UNICODE`` is alias of ``wchar_t`` since Python 3.3."
msgstr ""

#: library/array.rst:61
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`itemsize` attribute."
msgstr ""

#: library/array.rst:65
msgid "The module defines the following type:"
msgstr "Modül, aşağııdaki türleri tanımlar."

#: library/array.rst:70
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a list, a :term:`bytes-like "
"object`, or iterable over elements of the appropriate type."
msgstr ""

#: library/array.rst:75
msgid ""
"If given a list or string, the initializer is passed to the new array's :"
"meth:`fromlist`, :meth:`frombytes`, or :meth:`fromunicode` method (see "
"below) to add initial items to the array.  Otherwise, the iterable "
"initializer is passed to the :meth:`extend` method."
msgstr ""

#: library/array.rst:80
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""

#: library/array.rst:84
msgid "A string with all available type codes."
msgstr "Uygun olan tüm *type kodları*yla bir *string*"

#: library/array.rst:86
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""

#: library/array.rst:92
msgid "The following data items and methods are also supported:"
msgstr "Aşağıdaki veri öğeleri ve metodlar da desteklenmiştir."

#: library/array.rst:96
msgid "The typecode character used to create the array."
msgstr "Dizileri oluşturmakla ilgibi typecode karakteridir."

#: library/array.rst:101
msgid "The length in bytes of one array item in the internal representation."
msgstr "İçsel olarak bir dizinin byte cinsinden uzunluğudur."

#: library/array.rst:106
msgid "Append a new item with value *x* to the end of the array."
msgstr "Dizinin sonuna *x* değerinde yeni bir öğe ekler."

#: library/array.rst:111
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""

#: library/array.rst:121
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""

#: library/array.rst:130
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""

#: library/array.rst:138
msgid "Return the number of occurrences of *x* in the array."
msgstr "Dizideki *x*'ten kaç adet olduğunu döndürür."

#: library/array.rst:143
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"*yinelenebilir*lerden dizinin sonuna öğe ekler. *Yinelenebilir* farklı bir "
"diziyse *tamamen* aynı *type code*'a sahip olmalıdır. Aksi taktirde :exc:"
"`TypeError` hatasıyla karşılaşılır. Eğer *yinelenebilir* dizi değilse, "
"yinelenebilir olmalı ve elemanları eklenecek olan diziyle aynı türde "
"olmalıdır."

#: library/array.rst:151
msgid ""
"Appends items from the string, interpreting the string as an array of "
"machine values (as if it had been read from a file using the :meth:"
"`fromfile` method)."
msgstr ""
"*string*'den öğeleri ekler ve *string*'i makine değerleri dizisi gibi "
"yorumlar (:meth:`fromfile` metoduyla dosyadan okur gibi)."

#: library/array.rst:154
msgid ":meth:`fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ""
"Daha açık olması için :meth:`fromstring`, :meth:`frombytes`olarak tekrar "
"isimlendirilmiştir."

#: library/array.rst:160
#, fuzzy
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"*f* adlı :term:`file object` objesinden *n* adet öğeyi okur (makine değeri "
"olarak) ve dizinin sonuna ekler. *n*'den daha az öğe varsa :exc:`EOFError` "
"hatasoyla karşılaşılır fakat uygun olan öğeler yine de dizinin sonuna "
"eklenir. *f* yerleşik dosya objesi olmak zorundadır. Başka bir objeyi :meth:"
"`read` metodu okuyamaz."

#: library/array.rst:168
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"Listedeki değerleri ekler. *type* hatası almadığı sürece ``for x in list: a."
"append(x)`` ifadesiyle eşdeğerdir aksi halde dizi değiştirilemez."

#: library/array.rst:174
msgid ""
"Extends this array with data from the given unicode string.  The array must "
"be a type ``'u'`` array; otherwise a :exc:`ValueError` is raised.  Use "
"``array.frombytes(unicodestring.encode(enc))`` to append Unicode data to an "
"array of some other type."
msgstr ""
"Verilen unicode *string*iyle *array*'i genişletir. *array* ``'u'`` tipinde "
"olmalıdır; aksi taktirde :exc:`ValueError` hatasıyla karşıılaşılır. Diğer "
"tiplerdeki *array*lere Unicode verisini eklemek için  ``array."
"frombytes(unicodestring.encode(enc))``'i kullanın."

#: library/array.rst:182
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise :exc:"
"`ValueError` if *x* is not found."
msgstr ""

#: library/array.rst:187
msgid "Added optional *start* and *stop* parameters."
msgstr ""

#: library/array.rst:192
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"*i* pozisyonundan önce diziye *x* değerini ekle. Negatif değerler dizinin "
"sonuna göre muamele edilir."

#: library/array.rst:198
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"Diziden *i* indexindeki değeri çıkartır ve diziyi döndürür. Argüman ``-1`` "
"olarak varsayılır, aksi olmadığı taktirde son öğe çıkartılır ve dizi "
"döndürülür."

#: library/array.rst:205
msgid "Remove the first occurrence of *x* from the array."
msgstr "İlk *x* deperi diziden çıkarılır."

#: library/array.rst:210
msgid "Reverse the order of the items in the array."
msgstr "Bir dizedekinin öğelerini sırasını tersine çevirir."

#: library/array.rst:215
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"Diziyi, bir makine değerleri dizisine çevirir ve byte gösterimini döndürür "
"( aynı byte değerleri :meth:`tofile` metodu kullanılarak dosyaya "
"yazıdırılabilir.)."

#: library/array.rst:219
msgid ":meth:`tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ""
"Daha açık olması için :meth:`tostring`, :meth:`tobytes` olarak tekrar "
"isimlendirilmiştir."

#: library/array.rst:225
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr ""
"*f* isimli :term:`file object`'2daki tüm öğeler (makine değerleri olarak) "
"yazdırır."

#: library/array.rst:230
msgid "Convert the array to an ordinary list with the same items."
msgstr "Aynı öğelerle, dizeyi bir listeye çevirir."

#: library/array.rst:235
msgid ""
"Convert the array to a unicode string.  The array must be a type ``'u'`` "
"array; otherwise a :exc:`ValueError` is raised. Use ``array.tobytes()."
"decode(enc)`` to obtain a unicode string from an array of some other type."
msgstr ""
"Dizeyi dizgiye çevir. Dize ``'u'`` tipinde olmalıdır; aksi halde :exc:"
"`ValueError` ile karşılaşılaşılır. Bir dizeden unicode dizesi alıp başka bir "
"tipe çevirmek için ``array.tobytes().decode(enc)``'ı kullanınız."

#: library/array.rst:240
msgid ""
"When an array object is printed or converted to a string, it is represented "
"as ``array(typecode, initializer)``.  The *initializer* is omitted if the "
"array is empty, otherwise it is a string if the *typecode* is ``'u'``, "
"otherwise it is a list of numbers.  The string is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :class:`~array.array` class has been imported using "
"``from array import array``. Examples::"
msgstr ""
"Bir dize objesini yazdırıldığında ya da dizgiye çevrildiğinde "
"``array(typecode, initializer)`` olarak ifade edilir. Eğer dize boşsa "
"*initializer* atlanır,  *typecode*'u ``'u'`` ise bir dizge aksi taktirde bir "
"sayı listesidir. ``from array import array`` içeri aktarılarak :class:"
"`~array.array çağrıldığı sürece, :func:`eval` dizgelerin aynı tipte ve "
"değerde kalarak tekrar dizi haline döndürülmesi garanti altına alınmıştır."

#: library/array.rst:257
msgid "Module :mod:`struct`"
msgstr ":mod:`struct` modülü"

#: library/array.rst:257
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "Heterojen *binary* veriyi paketleme ve paketten çıkarma."

#: library/array.rst:261
msgid "Module :mod:`xdrlib`"
msgstr ":mod:`xdrlib` modülü"

#: library/array.rst:260
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""
"Uzaktan prosedürel çağrı sistemlerinde External Data Representation (XDR) "
"verisini paketleme ve pakketten çıkarmak için kullanılır."

#: library/array.rst:263
msgid "`NumPy <https://numpy.org/>`_"
msgstr ""

#: library/array.rst:264
msgid "The NumPy package defines another array type."
msgstr ""

#~ msgid "Py_UNICODE"
#~ msgstr "Py_UNICODE"

#~ msgid "\\(2)"
#~ msgstr "\\(2)"

#~ msgid ""
#~ "The ``'u'`` type code corresponds to Python's obsolete unicode character "
#~ "(:c:type:`Py_UNICODE` which is :c:type:`wchar_t`). Depending on the "
#~ "platform, it can be 16 bits or 32 bits."
#~ msgstr ""
#~ "``'u'`` kod tipi Python'ın modası geçmiş unicode (:c:type:`wchar_t` olan :"
#~ "type:`Py_UNICODE` ) karakterine tekabül eder. Platforma bağlı olarak 16 "
#~ "bit ya da 32 bit olabilir."

#~ msgid ""
#~ "``'u'`` will be removed together with the rest of the :c:type:"
#~ "`Py_UNICODE` API."
#~ msgstr ":c:type:`Py_UNICODE` API ile birlikte ``'u'`` da kaldırılacak."

#~ msgid "Deprecated alias for :meth:`frombytes`."
#~ msgstr ":meth:`frombytes` için artık kullanılmayan takma adı."

#~ msgid ""
#~ "Return the smallest *i* such that *i* is the index of the first "
#~ "occurrence of *x* in the array."
#~ msgstr ""
#~ "Dizideki *x*'in ilk bulunduğu *i* indexini döndürür ve bu da en ufak *i* "
#~ "değeridir."

#~ msgid "Deprecated alias for :meth:`tobytes`."
#~ msgstr ":meth:`tobytes` için artık kullanılmayan takma adı."

#~ msgid "`The Numerical Python Documentation <https://docs.scipy.org/doc/>`_"
#~ msgstr "`Sayısal Python Dköümantasyonu <https://docs.scipy.org/doc/>`_"

#~ msgid ""
#~ "The Numeric Python extension (NumPy) defines another array type; see "
#~ "http://www.numpy.org/ for further information about Numerical Python."
#~ msgstr ""
#~ "Sayısal Python uzantısı (Numpy) farklı bir dize tipi tanımlıyor;Daha "
#~ "fazla sayısal Python için http://www.numpy.org/ sitesine bakın."
