# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-01 14:56+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../cpython/Doc/library/trace.rst:2
msgid ":mod:`trace` --- Trace or track Python statement execution"
msgstr ""

#: ../cpython/Doc/library/trace.rst:7
msgid "**Source code:** :source:`Lib/trace.py`"
msgstr ""

#: ../cpython/Doc/library/trace.rst:11
msgid "The :mod:`trace` module allows you to trace program execution, generate annotated statement coverage listings, print caller/callee relationships and list functions executed during a program run.  It can be used in another program or from the command line."
msgstr ""

#: ../cpython/Doc/library/trace.rst:19
msgid "`Coverage.py <https://coverage.readthedocs.io/>`_"
msgstr ""

#: ../cpython/Doc/library/trace.rst:19
msgid "A popular third-party coverage tool that provides HTML output along with advanced features such as branch coverage."
msgstr ""

#: ../cpython/Doc/library/trace.rst:25
msgid "Command-Line Usage"
msgstr ""

#: ../cpython/Doc/library/trace.rst:27
msgid "The :mod:`trace` module can be invoked from the command line.  It can be as simple as ::"
msgstr ""

#: ../cpython/Doc/library/trace.rst:32
msgid "The above will execute :file:`somefile.py` and generate annotated listings of all Python modules imported during the execution into the current directory."
msgstr ""

#: ../cpython/Doc/library/trace.rst:39
msgid "Display usage and exit."
msgstr ""

#: ../cpython/Doc/library/trace.rst:43
msgid "Display the version of the module and exit."
msgstr ""

#: ../cpython/Doc/library/trace.rst:46
msgid "Main options"
msgstr ""

#: ../cpython/Doc/library/trace.rst:48
msgid "At least one of the following options must be specified when invoking :mod:`trace`.  The :option:`--listfuncs <-l>` option is mutually exclusive with the :option:`--trace <-t>` and :option:`--count <-c>` options. When :option:`--listfuncs <-l>` is provided, neither :option:`--count <-c>` nor :option:`--trace <-t>` are accepted, and vice versa."
msgstr ""

#: ../cpython/Doc/library/trace.rst:58
msgid "Produce a set of annotated listing files upon program completion that shows how many times each statement was executed.  See also :option:`--coverdir <-C>`, :option:`--file <-f>` and :option:`--no-report <-R>` below."
msgstr ""

#: ../cpython/Doc/library/trace.rst:65
msgid "Display lines as they are executed."
msgstr ""

#: ../cpython/Doc/library/trace.rst:69
msgid "Display the functions executed by running the program."
msgstr ""

#: ../cpython/Doc/library/trace.rst:73
msgid "Produce an annotated list from an earlier program run that used the :option:`--count <-c>` and :option:`--file <-f>` option.  This does not execute any code."
msgstr ""

#: ../cpython/Doc/library/trace.rst:79
msgid "Display the calling relationships exposed by running the program."
msgstr ""

#: ../cpython/Doc/library/trace.rst:82
msgid "Modifiers"
msgstr ""

#: ../cpython/Doc/library/trace.rst:88
msgid "Name of a file to accumulate counts over several tracing runs.  Should be used with the :option:`--count <-c>` option."
msgstr ""

#: ../cpython/Doc/library/trace.rst:93
msgid "Directory where the report files go.  The coverage report for ``package.module`` is written to file :file:`{dir}/{package}/{module}.cover`."
msgstr ""

#: ../cpython/Doc/library/trace.rst:98
msgid "When generating annotated listings, mark lines which were not executed with ``>>>>>>``."
msgstr ""

#: ../cpython/Doc/library/trace.rst:103
msgid "When using :option:`--count <-c>` or :option:`--report <-r>`, write a brief summary to stdout for each file processed."
msgstr ""

#: ../cpython/Doc/library/trace.rst:108
msgid "Do not generate annotated listings.  This is useful if you intend to make several runs with :option:`--count <-c>`, and then produce a single set of annotated listings at the end."
msgstr ""

#: ../cpython/Doc/library/trace.rst:114
msgid "Prefix each line with the time since the program started.  Only used while tracing."
msgstr ""

#: ../cpython/Doc/library/trace.rst:118
msgid "Filters"
msgstr ""

#: ../cpython/Doc/library/trace.rst:120
msgid "These options may be repeated multiple times."
msgstr ""

#: ../cpython/Doc/library/trace.rst:126
msgid "Ignore each of the given module names and its submodules (if it is a package).  The argument can be a list of names separated by a comma."
msgstr ""

#: ../cpython/Doc/library/trace.rst:131
msgid "Ignore all modules and packages in the named directory and subdirectories. The argument can be a list of directories separated by :data:`os.pathsep`."
msgstr ""

#: ../cpython/Doc/library/trace.rst:137
msgid "Programmatic Interface"
msgstr ""

#: ../cpython/Doc/library/trace.rst:142
msgid "Create an object to trace execution of a single statement or expression.  All parameters are optional.  *count* enables counting of line numbers.  *trace* enables line execution tracing.  *countfuncs* enables listing of the functions called during the run.  *countcallers* enables call relationship tracking.  *ignoremods* is a list of modules or packages to ignore. *ignoredirs* is a list of directories whose modules or packages should be ignored.  *infile* is the name of the file from which to read stored count information.  *outfile* is the name of the file in which to write updated count information.  *timing* enables a timestamp relative to when tracing was started to be displayed."
msgstr ""

#: ../cpython/Doc/library/trace.rst:155
msgid "Execute the command and gather statistics from the execution with the current tracing parameters.  *cmd* must be a string or code object, suitable for passing into :func:`exec`."
msgstr ""

#: ../cpython/Doc/library/trace.rst:161
msgid "Execute the command and gather statistics from the execution with the current tracing parameters, in the defined global and local environments.  If not defined, *globals* and *locals* default to empty dictionaries."
msgstr ""

#: ../cpython/Doc/library/trace.rst:168
msgid "Call *func* with the given arguments under control of the :class:`Trace` object with the current tracing parameters."
msgstr ""

#: ../cpython/Doc/library/trace.rst:173
msgid "Return a :class:`CoverageResults` object that contains the cumulative results of all previous calls to ``run``, ``runctx`` and ``runfunc`` for the given :class:`Trace` instance.  Does not reset the accumulated trace results."
msgstr ""

#: ../cpython/Doc/library/trace.rst:180
msgid "A container for coverage results, created by :meth:`Trace.results`.  Should not be created directly by the user."
msgstr ""

#: ../cpython/Doc/library/trace.rst:185
msgid "Merge in data from another :class:`CoverageResults` object."
msgstr ""

#: ../cpython/Doc/library/trace.rst:189
msgid "Write coverage results.  Set *show_missing* to show lines that had no hits.  Set *summary* to include in the output the coverage summary per module.  *coverdir* specifies the directory into which the coverage result files will be output.  If ``None``, the results for each source file are placed in its directory."
msgstr ""

#: ../cpython/Doc/library/trace.rst:195
msgid "A simple example demonstrating the use of the programmatic interface::"
msgstr ""

